{"version":3,"sources":["pages/ConvertationResume.jsx","components/SearchForm.jsx","utils/api.js","constants/constants.js","pages/SearchByID.jsx","pages/SearchByLink.jsx","pages/DownloadResume.jsx","static/logo.png","App.js","index.js"],"names":["useStyles","makeStyles","theme","ConvertationForm","display","flexWrap","border","borderRadius","FormControl","margin","spacing","button","padding","textfield","width","ConvertationResume","classes","React","useState","fio","setFio","className","fullWidth","Grid","container","item","xs","FormLabel","component","RadioGroup","aria-label","name","value","onChange","event","target","radio","FormControlLabel","control","Radio","label","TextField","id","multiline","rows","variant","Button","color","myForm","input","SearchForm","props","message","title","addResumeHandler","setValue","required","InputLabel","htmlFor","Input","e","startAdornment","InputAdornment","position","onClick","preventDefault","console","log","alert","handleSubmit","axios","create","baseURL","SearchByID","resume","setResume","resume_id","a","api","get","response","statusText","data","history","push","error","SearchByLink","alternate_url","createMuiTheme","typography","h3","fontSize","textAlign","backgroundColor","DownloadResume","justifyContent","alignItems","justify","ThemeProvider","Typography","header","logo","height","paper","palette","text","secondary","tab","App","Container","maxWidth","Paper","path","AppBar","src","alt","Toolbar","Tabs","indicatorColor","textColor","newValue","Tab","Link","to","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3031e5cf.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport {\r\n    Button,\r\n    Grid,\r\n    TextField,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControlLabel,\r\n    FormControl,\r\n    FormLabel,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    ConvertationForm: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        border: '1px solid #000',\r\n        borderRadius: '5px',\r\n    },\r\n    FormControl: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    button: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    textfield: {\r\n        width: '100%',\r\n    },\r\n}));\r\n\r\nfunction ConvertationResume() {\r\n    const classes = useStyles();\r\n    const [fio, setFio] = React.useState('безФИО');\r\n\r\n    const handleChange = (event) => {\r\n        setFio(event.target.value);\r\n    };\r\n\r\n    /* const classes = useStyles();\r\n    const [value, setValue] = useState('');\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    }; */\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.ConvertationForm}>\r\n                <FormControl fullWidth className={classes.FormControl}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <FormLabel component='legend'>Выберите форму загрузки резюме</FormLabel>\r\n                            <RadioGroup\r\n                                aria-label='cv'\r\n                                name='cv'\r\n                                value={fio}\r\n                                onChange={handleChange}\r\n                                className={classes.radio}\r\n                            >\r\n                                <FormControlLabel value='cvName' control={<Radio />} label='CV IBS с Фио ' />\r\n                                <FormControlLabel value='cvNotName' control={<Radio />} label='CV IBS без Фио' />\r\n                            </RadioGroup>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id='standard-basic'\r\n                                label='Отзыв рекрутера'\r\n                                multiline\r\n                                rows={5}\r\n                                className={classes.textfield}\r\n                                variant='outlined'\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={9}></Grid>\r\n                        <Grid item xs={3}>\r\n                            <Button variant='contained' color='primary' className={classes.button}>\r\n                                Сконвертировать резюме\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </FormControl>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ConvertationResume;\r\n","import React, { useState } from 'react';\r\nimport { Input, InputLabel, InputAdornment, FormControl, Button, Grid } from '@material-ui/core/';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    myForm: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        border: '1px solid #000',\r\n        borderRadius: '5px',\r\n    },\r\n    FormControl: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    button: {\r\n        padding: '2px',\r\n    },\r\n    input: {\r\n        width: '100%',\r\n    },\r\n}));\r\n\r\nexport default function SearchForm({ props, message, title, addResumeHandler }) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (value) {\r\n            addResumeHandler(value);\r\n            setValue('');\r\n            console.log(value);\r\n            // props.history.push('/convertation');\r\n        } else {\r\n            alert(`Поле ввода не заполнено. Введите ${title}.`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.myForm}>\r\n            <FormControl fullWidth className={classes.FormControl} required>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={10}>\r\n                        <InputLabel htmlFor='standard-adornment-amount'>{message}</InputLabel>\r\n                        <Input\r\n                            id='standard-adornment-amount'\r\n                            value={value}\r\n                            onChange={handleChange}\r\n                            startAdornment={<InputAdornment position='start'>{title}</InputAdornment>}\r\n                            className={classes.input}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={2}>\r\n                        <Button\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.button}\r\n                            onClick={(e) => handleSubmit(e)}\r\n                        >\r\n                            Загрузить резюме\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\nimport { baseUrl } from '../constants/constants';\n\nexport default axios.create({\n    baseURL: baseUrl,\n});\n","export const baseUrl = 'http://localhost:3006';\n","import React, { useState } from 'react';\r\nimport SearchForm from '../components/SearchForm';\r\nimport api from '../utils/api';\r\n\r\nfunction SearchByID(props) {\r\n    const [resume, setResume] = useState(null);\r\n\r\n    const addResumeHandler = async (resume_id) => {\r\n        try {\r\n            const response = await api.get(`/resumes/${resume_id}`);\r\n            if (response.statusText === 'OK') {\r\n                setResume(response.data);\r\n                props.history.push('/convertation');\r\n            } else {\r\n                alert(`Что-то пошло не так...`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Could not fetch.', error.message);\r\n\r\n            alert(`Резюме с таким id не существует или недоступно.`);\r\n        }\r\n    };\r\n\r\n    console.log(resume);\r\n    return (\r\n        <>\r\n            <SearchForm props={props} message='Введите id' title='id' addResumeHandler={addResumeHandler} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SearchByID;\r\n","import React, { useState } from 'react';\r\nimport SearchForm from '../components/SearchForm';\r\nimport api from '../utils/api';\r\n\r\nfunction SearchByLink(props) {\r\n    const [resume, setResume] = useState(null);\r\n\r\n    const addResumeHandler = async (alternate_url) => {\r\n        try {\r\n            const response = await api.get(`/resume/${alternate_url}`);\r\n            //Пример: alternate_url = \"https://hh.ru/resume/12345678901234567890123456789012abcdef\"\r\n            if (response.statusText === 'OK') {\r\n                setResume(response.data);\r\n                props.history.push('/convertation');\r\n            } else {\r\n                alert(`Что-то пошло не так...`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Could not fetch.', error.message);\r\n\r\n            alert(`Резюме с таким id не существует или недоступно.`);\r\n        }\r\n    };\r\n\r\n    console.log(resume);\r\n\r\n    return (\r\n        <>\r\n            <SearchForm\r\n                props={props}\r\n                message='Введите ссылку'\r\n                title='https://hh.ru'\r\n                addResumeHandler={addResumeHandler}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SearchByLink;\r\n","import React from 'react';\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nlet theme = createMuiTheme({\r\n    typography: {\r\n        h3: {\r\n            fontSize: 20,\r\n            textAlign: 'center',\r\n            backgroundColor: 'default',\r\n            padding: '30px',\r\n        },\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    DownloadResume: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        border: '1px solid #000',\r\n        borderRadius: '5px',\r\n    },\r\n    button: {\r\n        display: 'flex',\r\n        padding: theme.spacing(1),\r\n        margin: '10px',\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        width: '90%',\r\n    },\r\n}));\r\n\r\nfunction DownloadResume() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.DownloadResume}>\r\n                <Grid container margin={4} justify='space-between' alignItems='center'>\r\n                    <Grid item xs={12}>\r\n                        <ThemeProvider theme={theme}>\r\n                            <Typography variant='h3'>Конвертация прошла успешно </Typography>\r\n                        </ThemeProvider>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Button variant='contained' color='primary' className={classes.button}>\r\n                            Скачать в JSON\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Button variant='contained' color='primary' className={classes.button}>\r\n                            Скачать в DOCX\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DownloadResume;\r\n","export default __webpack_public_path__ + \"static/media/logo.cd601ddf.png\";","import { useState } from 'react';\r\nimport { AppBar, Container, Toolbar, makeStyles, Tabs, Tab, Grid, Paper } from '@material-ui/core';\r\nimport { BrowserRouter as Router, Route, Redirect, Switch, Link } from 'react-router-dom';\r\n\r\nimport ConvertationResume from './pages/ConvertationResume';\r\nimport SearchByID from './pages/SearchByID';\r\nimport SearchByLink from './pages/SearchByLink';\r\nimport DownloadResume from './pages/DownloadResume';\r\nimport logo from './static/logo.png';\r\n\r\nimport './App.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    header: {},\r\n\r\n    logo: {\r\n        padding: '8px 0',\r\n        width: '45px',\r\n        height: '45px',\r\n    },\r\n\r\n    paper: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    tab: {\r\n        // fontSize: 10,\r\n    },\r\n}));\r\n\r\nfunction App() {\r\n    const classes = useStyles();\r\n\r\n    const [value, setValue] = useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Router>\r\n                <Container maxWidth='md'>\r\n                    <Paper>\r\n                        <Route path='/'>\r\n                            <AppBar position='sticky' className={classes.header}>\r\n                                <Grid container spacing={1}>\r\n                                    <Grid item xs={1}>\r\n                                        <img src={logo} alt='logo' className={classes.logo} />\r\n                                    </Grid>\r\n                                    <Grid item xs={11}>\r\n                                        <Toolbar>\r\n                                            <Tabs\r\n                                                value={value}\r\n                                                indicatorColor='secondary'\r\n                                                textColor='default'\r\n                                                onChange={handleChange}\r\n                                            >\r\n                                                <Tab\r\n                                                    className={classes.tab}\r\n                                                    label='Поиск по ID'\r\n                                                    component={Link}\r\n                                                    to='/'\r\n                                                />\r\n                                                <Tab label='Поиск по ссылке' component={Link} to='/searchbylink' />\r\n\r\n                                                <Tab\r\n                                                    label='Сконвертировать резюме'\r\n                                                    component={Link}\r\n                                                    to='/convertation'\r\n                                                />\r\n\r\n                                                <Tab label='Скачать резюме' component={Link} to='/download' />\r\n                                            </Tabs>\r\n                                        </Toolbar>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AppBar>\r\n                        </Route>\r\n\r\n                        <Switch>\r\n                            <Route exact path='/' render={(props) => <SearchByID {...props} />}></Route>\r\n                            <Route path='/searchbylink' component={SearchByLink}></Route>\r\n                            <Route path='/convertation' component={ConvertationResume}></Route>\r\n                            <Route path='/download' component={DownloadResume}></Route>\r\n                            <Redirect to='/' />\r\n                        </Switch>\r\n                    </Paper>\r\n                </Container>\r\n            </Router>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}